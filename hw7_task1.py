"""
Задание 1.
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""

import random


# сделаем алгоритм умнее - разобьем сначала исходный массив на положительные и отрицательные числа.
# Это позволит исключить большое число сравнений положительных и отрицательных чисел,
# результат которых заранее предсказуем

# собственно, функция обратной сортировки
def b_bubble(lst):
    idx = len(lst) - 1
    while idx >= 0:
        for i in range(len(lst) - 1, len(lst) - idx - 1, -1):
            if lst[i] > lst[i - 1]:
                lst[i], lst[i - 1] = lst[i - 1], lst[i]
        idx -= 1
    return lst


# разбиваем на два отдельных массива и сортируем
def reverse_sort(posneg):
    pos = [elem for elem in posneg if elem >= 0]
    neg = [elem for elem in posneg if elem < 0]
    return b_bubble(pos) + b_bubble(neg)


if __name__ == "__main__":
    lst = [i for i in range(-100, 100)]
    random.shuffle(lst)
    print("Исходный массив:\n", lst)
    print("Отсортированный массив:\n", reverse_sort(lst))
